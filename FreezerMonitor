blueprint:
  name: Freezer Door Alert with Timer and Light Restore
  description: >
    Alerts if a freezer door is left open beyond a configurable time.
    Restores light to previous state on door close. Sends notifications to multiple devices.
  domain: automation
  input:
    door_sensor:
      name: Freezer Door Sensor
      selector:
        entity:
          domain: binary_sensor
          device_class: door

    wait_time:
      name: Time before alert
      description: Time the door must remain open before triggering the alert
      default: 300
      selector:
        number:
          min: 1
          max: 15
          unit_of_measurement: minutes
          step: 1
          mode: slider

    alert_light:
      name: Alert Light
      selector:
        entity:
          domain: light

    alert_brightness:
      name: Alert Brightness
      default: 255
      selector:
        number:
          min: 1
          max: 255
          step: 1

    alert_color:
      name: Alert Color
      description: Color to set the light to
      default: [255, 0, 0]
      selector:
        color_rgb: {}

    notify_devices:
      name: Notify Devices
      description: List of mobile devices to notify
      selector:
        target:
          entity:
            domain: mobile_app

variables:
  alert_brightness: !input alert_brightness
  alert_color: !input alert_color
  wait_time: !input wait_time
  light_entity: !input alert_light

trigger:
  - platform: state
    entity_id: !input door_sensor
    from: 'off'
    to: 'on'

condition: []

action:
  - variables:
      light_state: "{{ states(light_entity) }}"
      light_attrs: "{{ state_attr(light_entity, 'rgb_color') }}"
      light_brightness: "{{ state_attr(light_entity, 'brightness') | default(255) }}"
      light_is_on: "{{ is_state(light_entity, 'on') }}"

  - wait_for_trigger:
      - platform: state
        entity_id: !input door_sensor
        to: 'off'
    timeout: !input wait_time
    continue_on_timeout: true

  - choose:
      - conditions: "{{ is_state(door_sensor, 'on') }}"
        sequence:
          - service: light.turn_on
            target:
              entity_id: !input alert_light
            data:
              brightness: "{{ alert_brightness }}"
              rgb_color: !input alert_color

          - service: notify.notify
            data:
              message: "Freezer door has been left open for more than {{ wait_time }} seconds!"
              target: !input notify_devices

  - choose:
      - conditions: "{{ is_state(door_sensor, 'off') }}"
        sequence:
          - choose:
              - conditions: "{{ light_is_on }}"
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: !input alert_light
                    data:
                      brightness: "{{ light_brightness }}"
                      rgb_color: "{{ light_attrs }}"
              - conditions: "{{ not light_is_on }}"
                sequence:
                  - service: light.turn_off
                    target:
                      entity_id: !input alert_light
