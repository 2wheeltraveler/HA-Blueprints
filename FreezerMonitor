blueprint:
  name: Door Open Alarm Light
  description: >
    Turn on a light with a specific color when a door is opened, and restore its
    previous state when the door is closed.
  domain: automation
  input:
    door_sensor:
      name: Door Sensor
      description: The door sensor entity.
      selector:
        entity:
          domain: binary_sensor
          device_class: door
    light:
      name: Light
      description: The light entity to control.
      selector:
        entity:
          domain: light
    alarm_color:
      name: Alarm Color
      description: The color to set the light to when the door opens.
      default: red
      selector:
        color: {}
    alarm_brightness:
      name: Alarm Brightness
      description: The brightness to set the light to when the door opens (optional).
      default: 255
      selector:
        number:
          min: 0
          max: 255
          step: 1

trigger:
  - platform: state
    entity_id: !input door_sensor
    from: 'off'
    to: 'on'
  - platform: state
    entity_id: !input door_sensor
    from: 'on'
    to: 'off'
condition: []
action:
  - variables:
      scene_id: "{{ trigger.to_state.context.id }}"
      light_entity: !input light
      alarm_color: !input alarm_color
      alarm_brightness: !input alarm_brightness
  - choose:
      - conditions:
          - condition: trigger
            id: "0"
        sequence:
          - service: scene.create
            data:
              scene_id: "scene_{{ scene_id }}"
              snapshot_entities: "{{ light_entity }}"
          - service: light.turn_on
            target:
              entity_id: "{{ light_entity }}"
            data:
              color_name: "{{ alarm_color }}"
              brightness: "{{ alarm_brightness }}"
      - conditions:
          - condition: trigger
            id: "1"
        sequence:
          - service: scene.turn_on
            target:
              entity_id: "scene_{{ scene_id }}"
          - service: scene.delete
            target:
              entity_id: "scene_{{ scene_id }}"
